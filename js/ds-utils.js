!function(e){var t={};function n(o){if(t[o])return t[o].exports;var r=t[o]={i:o,l:!1,exports:{}};return e[o].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(o,r,function(t){return e[t]}.bind(null,r));return o},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=30)}({2:function(e,t,n){"use strict";var o,r=function(){return void 0===o&&(o=Boolean(window&&document&&document.all&&!window.atob)),o},c=function(){var e={};return function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}e[t]=n}return e[t]}}(),i=[];function l(e){for(var t=-1,n=0;n<i.length;n++)if(i[n].identifier===e){t=n;break}return t}function a(e,t){for(var n={},o=[],r=0;r<e.length;r++){var c=e[r],a=t.base?c[0]+t.base:c[0],s=n[a]||0,u="".concat(a," ").concat(s);n[a]=s+1;var d=l(u),f={css:c[1],media:c[2],sourceMap:c[3]};-1!==d?(i[d].references++,i[d].updater(f)):i.push({identifier:u,updater:y(f,t),references:1}),o.push(u)}return o}function s(e){var t=document.createElement("style"),o=e.attributes||{};if(void 0===o.nonce){var r=n.nc;r&&(o.nonce=r)}if(Object.keys(o).forEach((function(e){t.setAttribute(e,o[e])})),"function"==typeof e.insert)e.insert(t);else{var i=c(e.insert||"head");if(!i)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");i.appendChild(t)}return t}var u,d=(u=[],function(e,t){return u[e]=t,u.filter(Boolean).join("\n")});function f(e,t,n,o){var r=n?"":o.media?"@media ".concat(o.media," {").concat(o.css,"}"):o.css;if(e.styleSheet)e.styleSheet.cssText=d(t,r);else{var c=document.createTextNode(r),i=e.childNodes;i[t]&&e.removeChild(i[t]),i.length?e.insertBefore(c,i[t]):e.appendChild(c)}}function m(e,t,n){var o=n.css,r=n.media,c=n.sourceMap;if(r?e.setAttribute("media",r):e.removeAttribute("media"),c&&btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(c))))," */")),e.styleSheet)e.styleSheet.cssText=o;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(o))}}var g=null,v=0;function y(e,t){var n,o,r;if(t.singleton){var c=v++;n=g||(g=s(t)),o=f.bind(null,n,c,!1),r=f.bind(null,n,c,!0)}else n=s(t),o=m.bind(null,n,t),r=function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)};return o(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;o(e=t)}else r()}}e.exports=function(e,t){(t=t||{}).singleton||"boolean"==typeof t.singleton||(t.singleton=r());var n=a(e=e||[],t);return function(e){if(e=e||[],"[object Array]"===Object.prototype.toString.call(e)){for(var o=0;o<n.length;o++){var r=l(n[o]);i[r].references--}for(var c=a(e,t),s=0;s<n.length;s++){var u=l(n[s]);0===i[u].references&&(i[u].updater(),i.splice(u,1))}n=c}}}},30:function(e,t,n){n(31),e.exports=n(33)},31:function(e,t,n){var o=n(2),r=n(32);"string"==typeof(r=r.__esModule?r.default:r)&&(r=[[e.i,r,""]]);var c={insert:"head",singleton:!1},i=(o(r,c),r.locals?r.locals:{});e.exports=i},32:function(e,t,n){},33:function(e,t){window.addEventListener("DOMContentLoaded",(function(){var e=document.querySelector(".disable-transition");e&&e.classList.toggle("disable-transition")}));var n=document.querySelectorAll(".stock-full");n&&n.forEach((function(e){var t=e.querySelector(".stock-full__wrapper");e.querySelector(".stock-full__expand").addEventListener("click",(function(){return t.classList.toggle("is-expanded")}))}));var o=document.querySelectorAll(".stock-dropdown-filter");o&&o.forEach((function(e){e.querySelector(".stock-dropdown-filter__head").addEventListener("click",(function(){return e.classList.toggle("is-expanded")}))}));var r=document.querySelectorAll(".item-params-list__item");r&&r.forEach((function(e){e.addEventListener("click",(function(){return e.classList.toggle("is-selected")}))}));var c=document.querySelectorAll(".item-params-list");r&&c.forEach((function(e){var t=e.nextElementSibling;t&&t.addEventListener("click",(function(){return e.classList.toggle("is-expanded")}))}));var i=document.querySelectorAll(".collapse-section");i&&i.forEach((function(e){e.querySelector(".collapse-section__heading").addEventListener("click",(function(){return e.classList.toggle("is-expanded")}))}));var l=document.querySelectorAll(".modal__select");if(l)for(var a=0;a<l.length;a++)l[a].addEventListener("click",(function(){this.classList.toggle("is-toggle")}));var s=document.querySelectorAll(".modal__select");s&&s.forEach((function(e){var t=e.querySelector(".modal__selected-position");e.querySelectorAll("li").forEach((function(e){e.addEventListener("click",(function(){t.innerHTML=e.innerHTML}))}))}));var u,d=document.querySelector(".modal__btn-about-goods"),f=document.querySelector(".modal__goods-info");d&&d.addEventListener("click",(function(){f.classList.toggle("is-toggle")})),document.querySelectorAll(".btn-sum").forEach((function(e){var t=e.querySelector(".btn-sum__plus"),n=e.querySelector(".btn-sum__minus"),o=e.querySelector(".btn-sum__sum-num");t&&n&&o&&(t.addEventListener("click",(function(){o.value++})),n.addEventListener("click",(function(){o.value--})))})),(u=document.querySelectorAll(".modal-message-for-org"))&&u.forEach((function(e){e.querySelectorAll(".img-container_small").forEach((function(e){e.addEventListener("click",(function(){e.parentNode.removeChild(e)}))}))}));var m,g,v,y,_,p,h,S,b=document.querySelectorAll(".icon-heart-bold");b&&b.forEach((function(e){e.addEventListener("click",(function(){e.classList.toggle("icon-heart-filled")}))})),(m=document.querySelectorAll(".collapse-block"))&&m.forEach((function(e){e.addEventListener("click",(function(){e.classList.toggle("is-toggle")}))})),(g=document.querySelectorAll(".delivery__mobile"))&&g.forEach((function(e){var t=e.querySelector("#btn-toggle-wrap");t&&t.addEventListener("click",(function(){e.classList.toggle("is-toggle")}))})),(v=document.querySelectorAll(".delivery__city"))&&v.forEach((function(e){var t=e.querySelector(".delivery__city-header");t&&t.addEventListener("click",(function(){e.classList.toggle("is-toggle")}))})),document.querySelectorAll(".sidebar").forEach((function(e){var t=e.querySelector(".sidebar__background"),n=e.querySelector(".sidebar__close");t.addEventListener("click",(function(){e.classList.toggle("sidebar_is-active")})),n.addEventListener("click",(function(){e.classList.toggle("sidebar_is-active")}))})),(y=document.querySelectorAll(".card-active-custom"))&&y.forEach((function(e){e.addEventListener("click",(function(){e.classList.toggle("is-toggle")}))})),(_=document.querySelectorAll(".modal"))&&_.forEach((function(e){var t=e.querySelector(".modal__bg"),n=e.querySelector(".modal__btn-close");t&&t.addEventListener("click",(function(){e.classList.remove("is-visible")})),n&&n.addEventListener("click",(function(){e.classList.remove("is-visible")}))})),(p=document.querySelectorAll(".switcher__label"))&&p.forEach((function(e){e.addEventListener("click",(function(){var e=document.querySelectorAll(".card-active-custom");e&&e.forEach((function(e){e.classList.toggle("is-toggle")}))}))})),(h=document.querySelectorAll(".auth-form"))&&h.forEach((function(e){var t=e.querySelector("#auth-tabs");t.addEventListener("click",(function(){!0===t.checked?(e.classList.toggle("auth-form_sign-up"),e.querySelector(".auth-form__form-sign-up").style.display="flex",e.querySelector(".auth-form__form-sign-in").style.display="none"):(e.classList.remove("auth-form_sign-up"),e.querySelector(".auth-form__form-sign-up").style.display="none",e.querySelector(".auth-form__form-sign-in").style.display="flex")}))})),document.addEventListener("DOMContentLoaded",(function(){var e=document.createElement("div");e.setAttribute("class","ds-home"),e.addEventListener("click",(function(){var e,t=window.location.host,n=window.location.origin;e=t.includes("github")?"".concat(n,"/design-system/"):"".concat(n);window.location.href=e})),document.body.appendChild(e)})),(S=document.querySelectorAll(".auth-form"))&&S.forEach((function(e){var t=e.querySelector(".auth-form__link-to-recovery-password"),n=e.querySelector(".auth-form__form-sign-in"),o=e.querySelector(".auth-form__form-password-recovery");t.addEventListener("click",(function(e){e.preventDefault(),n.style.display="none",o.style.display="block"}))}));var L=document.querySelectorAll(".modal-list-catalogs");L&&L.forEach((function(e){var t=e.querySelector(".modal-container__wrap"),n=e.querySelector(".modal-container__catalogs"),o=e.querySelector(".modal-container__positions"),r=e.querySelector(".modal-list-catalogs__selected-position-link"),c=e.querySelector(".modal-list-catalogs__selected-catalogs-link"),i=e.querySelector(".modal-container__btn-position"),l=e.querySelector(".modal-container__btn-catalogs"),a=e.querySelector(".modal-container__footer-btn-toggle");t&&a&&r&&c&&l&&i&&n&&o&&(a.addEventListener("click",(function(){t.classList.toggle("is-toggle"),console.log("Click")})),r.addEventListener("click",(function(){t.classList.toggle("is-toggle")})),c.addEventListener("click",(function(){t.classList.toggle("is-toggle")})),i.addEventListener("click",(function(){o.classList.toggle("is-toggle")})),l.addEventListener("click",(function(){n.classList.toggle("is-toggle")})))}));var E=document.querySelectorAll(".stock-d__main");E&&E.forEach((function(e){var t=e.querySelectorAll(".checkbox__input"),n=e.querySelector(".ds-btn_hover"),o=e.querySelector(".modal-list-catalogs");t&&t.forEach((function(e){e.addEventListener("click",(function(){console.log("Click"),o&&o.classList.toggle("is-visible")}))})),n&&n.addEventListener("click",(function(){o.classList.toggle("is-visible")}))}));try{var q=moment([2020,1,19]),k=moment([2020,2,17]).diff(q,"days");document.querySelector(".timer-reverse__time").innerHTML=k,document.querySelector("#daysView").innerHTML=k;var A=document.querySelector(".promo-for-begginners__btn-look");A&&A.addEventListener("click",(function(){document.querySelector(".promo-for-begginners").classList.toggle("is-view")}))}catch(e){}var w=document.querySelectorAll("#ds-inputs-form__phone");w&&w.forEach((function(e){e.addEventListener("keyup",(function(){this.value=this.value.replace(/[^\d]/g,"")}))}))}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,