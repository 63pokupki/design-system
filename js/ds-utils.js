!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=20)}({0:function(e,t,n){"use strict";var r,o={},i=function(){return void 0===r&&(r=Boolean(window&&document&&document.all&&!window.atob)),r},c=function(){var e={};return function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}e[t]=n}return e[t]}}();function l(e,t){for(var n=[],r={},o=0;o<e.length;o++){var i=e[o],c=t.base?i[0]+t.base:i[0],l={css:i[1],media:i[2],sourceMap:i[3]};r[c]?r[c].parts.push(l):n.push(r[c]={id:c,parts:[l]})}return n}function a(e,t){for(var n=0;n<e.length;n++){var r=e[n],i=o[r.id],c=0;if(i){for(i.refs++;c<i.parts.length;c++)i.parts[c](r.parts[c]);for(;c<r.parts.length;c++)i.parts.push(p(r.parts[c],t))}else{for(var l=[];c<r.parts.length;c++)l.push(p(r.parts[c],t));o[r.id]={id:r.id,refs:1,parts:l}}}}function s(e){var t=document.createElement("style");if(void 0===e.attributes.nonce){var r=n.nc;r&&(e.attributes.nonce=r)}if(Object.keys(e.attributes).forEach((function(n){t.setAttribute(n,e.attributes[n])})),"function"==typeof e.insert)e.insert(t);else{var o=c(e.insert||"head");if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}return t}var u,d=(u=[],function(e,t){return u[e]=t,u.filter(Boolean).join("\n")});function f(e,t,n,r){var o=n?"":r.css;if(e.styleSheet)e.styleSheet.cssText=d(t,o);else{var i=document.createTextNode(o),c=e.childNodes;c[t]&&e.removeChild(c[t]),c.length?e.insertBefore(i,c[t]):e.appendChild(i)}}function v(e,t,n){var r=n.css,o=n.media,i=n.sourceMap;if(o&&e.setAttribute("media",o),i&&btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleSheet)e.styleSheet.cssText=r;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(r))}}var m=null,y=0;function p(e,t){var n,r,o;if(t.singleton){var i=y++;n=m||(m=s(t)),r=f.bind(null,n,i,!1),o=f.bind(null,n,i,!0)}else n=s(t),r=v.bind(null,n,t),o=function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)};return r(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;r(e=t)}else o()}}e.exports=function(e,t){(t=t||{}).attributes="object"==typeof t.attributes?t.attributes:{},t.singleton||"boolean"==typeof t.singleton||(t.singleton=i());var n=l(e,t);return a(n,t),function(e){for(var r=[],i=0;i<n.length;i++){var c=n[i],s=o[c.id];s&&(s.refs--,r.push(s))}e&&a(l(e,t),t);for(var u=0;u<r.length;u++){var d=r[u];if(0===d.refs){for(var f=0;f<d.parts.length;f++)d.parts[f]();delete o[d.id]}}}}},20:function(e,t,n){n(21),e.exports=n(23)},21:function(e,t,n){var r=n(22);"string"==typeof r&&(r=[[e.i,r,""]]);var o={insert:"head",singleton:!1};n(0)(r,o);r.locals&&(e.exports=r.locals)},22:function(e,t,n){},23:function(e,t){window.addEventListener("DOMContentLoaded",(function(){var e=document.querySelector(".disable-transition");e&&e.classList.toggle("disable-transition")}));var n=document.querySelectorAll(".stock-full");n&&n.forEach((function(e){var t=e.querySelector(".stock-full__wrapper");e.querySelector(".stock-full__expand").addEventListener("click",(function(){return t.classList.toggle("is-expanded")}))}));var r=document.querySelectorAll(".stock-dropdown-filter");r&&r.forEach((function(e){e.querySelector(".stock-dropdown-filter__head").addEventListener("click",(function(){return e.classList.toggle("is-expanded")}))}));var o=document.querySelectorAll(".item-params-list__item");o&&o.forEach((function(e){e.addEventListener("click",(function(){return e.classList.toggle("is-selected")}))}));var i=document.querySelectorAll(".item-params-list");o&&i.forEach((function(e){var t=e.nextElementSibling;t&&t.addEventListener("click",(function(){return e.classList.toggle("is-expanded")}))}));var c=document.querySelectorAll(".collapse-section");c&&c.forEach((function(e){e.querySelector(".collapse-section__heading").addEventListener("click",(function(){return e.classList.toggle("is-expanded")}))}));var l=document.querySelectorAll(".modal__select");if(l)for(var a=0;a<l.length;a++)l[a].addEventListener("click",(function(){this.classList.toggle("is-toggle")}));var s=document.querySelectorAll(".modal__select");s&&s.forEach((function(e){var t=e.querySelector(".modal__selected-position");e.querySelectorAll("li").forEach((function(e){e.addEventListener("click",(function(){t.innerHTML=e.innerHTML}))}))}));var u=document.querySelector(".modal__btn-about-goods"),d=document.querySelector(".modal__goods-info");u&&u.addEventListener("click",(function(){d.classList.toggle("is-toggle")})),document.querySelectorAll(".btn-sum").forEach((function(e){var t=e.querySelector(".btn-sum__plus"),n=e.querySelector(".btn-sum__minus"),r=e.querySelector(".btn-sum__sum-num");t&&n&&r&&(t.addEventListener("click",(function(){r.value++})),n.addEventListener("click",(function(){r.value--})))}));var f,v,m,y,p,g,h,_,b=document.querySelectorAll(".icon-heart-bold");b&&b.forEach((function(e){e.addEventListener("click",(function(){e.classList.toggle("icon-heart-filled")}))})),(f=document.querySelectorAll(".collapse-block"))&&f.forEach((function(e){var t=e.querySelector(".collapse-block__header");t&&t.addEventListener("click",(function(){e.classList.toggle("is-toggle")}))})),(v=document.querySelectorAll(".delivery__mobile"))&&v.forEach((function(e){var t=e.querySelector("#btn-toggle-wrap");t&&t.addEventListener("click",(function(){e.classList.toggle("is-toggle")}))})),(m=document.querySelectorAll(".delivery__city"))&&m.forEach((function(e){var t=e.querySelector(".delivery__city-header");t&&t.addEventListener("click",(function(){e.classList.toggle("is-toggle")}))})),document.querySelectorAll(".sidebar").forEach((function(e){var t=e.querySelector(".sidebar__background"),n=e.querySelector(".sidebar__close");t.addEventListener("click",(function(){e.classList.toggle("sidebar_is-active")})),n.addEventListener("click",(function(){e.classList.toggle("sidebar_is-active")}))})),(y=document.querySelectorAll(".card-active-custom"))&&y.forEach((function(e){var t=e.querySelectorAll(".arrow");t&&t.forEach((function(t){t.addEventListener("click",(function(){e.classList.toggle("is-toggle")}))}))})),(p=document.querySelectorAll(".modal"))&&p.forEach((function(e){var t=e.querySelector(".modal__bg"),n=e.querySelector(".modal__btn-close");t&&t.addEventListener("click",(function(){e.classList.remove("is-visible")})),n&&n.addEventListener("click",(function(){e.classList.remove("is-visible")}))})),(g=document.querySelectorAll(".switcher__label"))&&g.forEach((function(e){e.addEventListener("click",(function(){var e=document.querySelectorAll(".card-active-custom");e&&e.forEach((function(e){e.classList.toggle("is-toggle")}))}))})),(h=document.querySelectorAll(".auth-form"))&&h.forEach((function(e){var t=e.querySelector("#auth-tabs");t.addEventListener("click",(function(){!0===t.checked?(e.classList.toggle("auth-form_sign-up"),e.querySelector(".auth-form__form-sign-up").style.display="flex",e.querySelector(".auth-form__form-sign-in").style.display="none"):(e.classList.remove("auth-form_sign-up"),e.querySelector(".auth-form__form-sign-up").style.display="none",e.querySelector(".auth-form__form-sign-in").style.display="flex")}))})),document.addEventListener("DOMContentLoaded",(function(){var e=document.createElement("div");e.setAttribute("class","ds-home"),e.addEventListener("click",(function(){var e,t=window.location.host,n=window.location.origin;e=t.includes("github")?"".concat(n,"/design-system/"):"".concat(n);window.location.href=e})),document.body.appendChild(e)})),(_=document.querySelectorAll(".auth-form"))&&_.forEach((function(e){var t=e.querySelector(".auth-form__link-to-recovery-password"),n=e.querySelector(".auth-form__form-sign-in"),r=e.querySelector(".auth-form__form-password-recovery");t.addEventListener("click",(function(e){e.preventDefault(),n.style.display="none",r.style.display="block"}))}))}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,